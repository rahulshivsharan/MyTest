1> public class ABC{
2> 	public static void main(String [] args){
3>		List<String> strList = new ArrayList<String>();
4>		atrList.add("ONE");
5>		atrList.add("TWO");
6>		atrList.add("THREE");
7>		atrList.add("FOURE");
8>		System.out.println(strList);
9>	}
10>}

class Department{
	public void addDept(Department dept){
		this.dept = dept;
	}
}
F(0) = a
G(0) = a
F(n + 1) = f(F(n))
G(n + 1) = f(G(n))
phi = 1 + (1/\phi) =  1 + (1/(1 + (1/(1 + 1/...))))
n! = n (n - 1)! = n (n - 1)\1
My Test File for Uploading..
                <div    class="drop-box"
                        ng-file-drop="onFileSelect($files)"
                        ng-file-drop-available="dropSupported=true"
                        ng-file-drag-over-class="dragOverClass($event)"
                        ng-show="dropSupported">drop files here
                </div>

                <div    ng-file-drop-available="dropSupported=true"
                        ng-show="!dropSupported">
                                HTML5 Drop File is not supported!
                </div>
My Test File for Uploading..
My Test File for Uploading..
My Test File for Uploading..
public static void main(String [] args){
	System.out.println("This is Java Code");
}
<div id="collapseThree" class="panel-collapse collapse">
	<div class="panel-body">
		Knockout is a standalone JavaScript implementation of the Model-View-ViewModel pattern with templates. The underlying principles are therefore:
		<ul>
			<li>a clear separation between domain data, view components and data to be displayed</li>
			<li>the presence of a clearly defined layer of specialized code to manage the relationships between the view components</li>
		</ul>
		The latter leverages the native event management features of the JavaScript language.
		These features streamline and simplify the specification of complex relationships between view components, which in turn make the display more responsive and the user experience richer.
		Knockout was developed and is maintained as an open source project by Steve Sanderson, a Microsoft employee. As the author said, "it continues exactly as-is, and will evolve in whatever direction I and its user community wishes to take it", and stressed, <strong>"this isnâ€™t a Microsoft product".</strong>
	</div>
</div>

jQuery(document).ready(function(){
	alert("Hi !!!!");	
});

My Test File for Uploading..
My Test File for Uploading..
<script type="text/javascript">
	window.onload = function(){
		alert("Window is loaded...");
	}
</script>
My Test File for Uploading..
My Test File for Uploading..
Smiell sds adada a
My Test File for Uploading..
/* *********
Foxcatched
Boyhood
Birdman
Fury
**********/
Cheb Khaled
Aicha
Didi
Sehar
Bimab dfs sdf
Catch me if you can
$.each($scope.fetchedSecurityGroups,function(index,sg){
		if(sg.name == "default"){
			$scope.select_SG_Obj[sg.id] = true;
			return false;
		}	
});
My Test File for Uploading..
My Test File for Uploading..
var fn = function(){
	for(var x=0;x < 10; x++){
		console.log("Value[x] : "+x);
	}
}
<div>
	<table>
		<tr></tr>
	</table>
</div>
My Test File for Uploading..
Nikhil Suktankar Nikhil Suktankar Nikhil SNikhil Suktankar 
uktankar 
Nikhil Suktankar Nikhil Suktankar 
Nikhil Suktankar Nikhil Suktankar My Test File for Uploading..
My Test File for Uploading..
<link rel="stylesheet" type="text/css" href="D:\Rahul Shivsharan\JavaScript-Framework\BootstrapCSS\bootstrap-3.2.0-dist\css\bootstrap.css"></link>
<link rel="stylesheet" type="text/css" href="D:\Rahul Shivsharan\JavaScript-Framework\BootstrapCSS\bootstrap-3.2.0-dist\css\bootstrap-theme.css"></link>
<script type="text/javascript" src="D:\Rahul Shivsharan\JavaScript-Framework\jQuery\jquery-1.11.1.js"></script>
<script type="text/javascript" src="D:\Rahul Shivsharan\JavaScript-Framework\BootstrapCSS\bootstrap-3.2.0-dist\js\bootstrap.js"></script>
My Test File for Uploading..
unsigned int factorial(unsigned int n) {
    if (n == 0) {
        return 1;
    } else {
        return n * factorial(n - 1);
    }
}
class Parent{
	public void met01(){
		System.out.println(" This is method 'met01'");
	}
}
var fn = function(){
	alert("This is the new development !!!!");
	
	for(var i=0;i< 23; i++){
		alert(i);
	}
}
class Child extends Parent{
	@Override
	public void met01(){
		System.out.println("This is method 'met01' of class Children");
	}
}
gandurde nath 



var fn = function(){
	console.log("Hi !!!!!");
}

var hello = function(){
	console.log("Greeting Hello");
}


var hello-Two = function(){
	console.log("Greeting Hello 2");
}

var hello-Three = function(){
	console.log("Greeting Hello 3");
}

angular.module("MyApp-2",["ngResource"]);
angular.module("MyApp-2").controller("myCtrlTwo",function($log){
	$log.log("Hi this is an example of myCtrlTwo");
});

angular.module("MyApp",["ngResource"]);
angular.module("MyApp").controller("myCtrl",function($log){
	$log.log("Hi this is an example.");
});

var hello-Four = function(){
	console.log("Greeting Hello 4");
}

var hello-Five = function(){
	console.log("Greeting Hello 5");
}

angular.module("MyApp-3",["ngResource"]);
angular.module("MyApp-3").controller("myCtrlTHree",function($log){
	$log.log("Hi this is an example. 3");
});



